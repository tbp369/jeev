
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));

  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);
}/* You can add global styles to this file, and also import other style files */

@import '@angular/material/prebuilt-themes/azure-blue.css';

html, body { 
  height: 100%; 
  margin: 0; 
  padding: 0;
}

body { 
  font-family: Roboto, "Helvetica Neue", sans-serif; 
  background: #f5f5f5;
}

* {
  box-sizing: border-box;
}

// Custom Material Design overrides
.mat-mdc-card {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;
}

.mat-mdc-button.mat-primary {
  background-color: #1976d2 !important;
}

.mat-mdc-raised-button.mat-primary {
  background-color: #1976d2 !important;
  color: white !important;
}

// Custom snackbar styles
.success-snackbar {
  background: #4caf50 !important;
  color: white !important;
}

.error-snackbar {
  background: #f44336 !important;
  color: white !important;
}


html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
